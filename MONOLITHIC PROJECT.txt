MONOLITHIC PROJECT: 

STEP-1:	Launch an instance with key-pair, 8080 port and IAM Admin role
STEP-2:	install terraform and write a terraform code to launch an instance with same key-pair.
STEP-3: push that code into GitHub. 
STEP-4: setup Jenkins in our server. 
STEP-5: create a job in Jenkins (Automate terraform) to launch an instance. 
STEP-6: install Ansible and its dependencies(python-pip, level, openssl and pip install boto3)
STEP-7: write a plugin for getting prod server details
STEP-8: allow all permissions for Ansible configuration on prod servers
STEP-9: make ssh connection b/w the server through pem file
STEP-10: write a script to automate the configuration on prod servers.


STEP-2:	INSTALL TERRAFORM

yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
 yum install terraform -y


STEP-5:

1. Choice parameters
2. Integrate GitHub repo
3. Shell:
	#!/bin/bash
	set -xe

	cd /var/lib/jenkins/workspace/j1/Terraform

	terraform init
	terraform plan
	terraform $tf_action -auto-approve

	sleep 20

	if [ $TERRAFORM_ACTION = "destroy" ]; then
		exit 0
	else
		cd ../Ansible
		ansible-playbook -i /opt/ansible/inventory/aws_ec2.yml deployment.yml
	fi

STEP-6,7,8,9:
amazon-linux-extras install ansible2 -y
yum install python python-pip python-level openssl -y
pip install boto3
vi /etc/ansible/ansible.cfg
    - [ ] 	inventory       = /opt/ansible/inventory/aws_ec2.yml
    - [ ] 	host_key_checking = False
    - [ ]        enable_plugins = aws_ec2 (line-330)
    - [ ]         Vim keypair.yml
Mkdir -p /opt/ansible/inventory
Vim aws_ec2.yml		
========================
---
plugin: aws_ec2
regions:
  - ap-south-1
filters:
  tag:Environment: dev
======================
